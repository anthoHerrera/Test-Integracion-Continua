/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */



/*buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.github.spotbugs:spotbugs-gradle-plugin:2.0.1"
  }
}
*/
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'pmd'
    id "com.github.spotbugs" version "2.0.1"
    id 'checkstyle'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

version = '1.2.1'

repositories {
    mavenCentral()
}

spotbugs {
  toolVersion = '3.1.3'
  ignoreFailures = true
  effort = 'max'
  showProgress = true
}

sourceSets {
  // we define `main` sourceSet here, so SpotBugs Gradle Plugin generates `spotbugsMain` task
  main {
    java.srcDirs = ['src/main/java']
  }
}

// To generate an HTML report instead of XML
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    //implementation 'com.google.guava:guava:28.0-jre'
    api 'org.apache.httpcomponents:httpclient:4.5.7'
    implementation 'org.apache.commons:commons-lang3:3.5'
	
    // Use JUnit test framework
    
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    
}

checkstyle {
	ignoreFailures = true
	toolVersion "7.6.1"
	configFile = rootProject.file("config/checkstyle/checkstyle.xml")
	
}

tasks.withType(Checkstyle){
    reports{
        xml.enabled=false
        html.enabled=true
    }
}

test {
    useJUnitPlatform()
    testLogging {
		events "passed", "skipped", "failed"
	}
}

tasks.withType(Pmd){
    reports{
        xml.enabled=true
        html.enabled=true
    }
}
pmd {
   	ignoreFailures = true
    pmdTest.enabled=false
}

